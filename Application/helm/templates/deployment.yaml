kind: Deployment
apiVersion: apps/v1
metadata:
# set your lab user name
  name: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.ReplicaNumber }}
  selector:
    matchLabels:
# set your lab user name
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
# set your lab user name
        app: {{ .Chart.Name }}
    spec:
      containers:
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: hello-world
          ports:
            - containerPort: {{ .Values.containers.containerPort }}
              protocol: TCP
          imagePullPolicy: IfNotPresent
          readinessProbe:
                    httpGet:
                      path: /health/readiness # this check the application url path
                      port: {{ .Values.containers.containerPort  }} # In which port the Application is listening
                      scheme: HTTP
                    initialDelaySeconds: 1 # the time is waiting befor testing the application path
                    timeoutSeconds: 1 # the time for timeout
                    periodSeconds: 10 # the abount of time to wait between checks
                    successThreshold: 1 # count to decalre seccessfull 
                    failureThreshold: 3 # count to decalre failure
          ivenessProbe:
                      httpGet:
                        path: /health/liveliness
                        port: {{ .Values.containers.containerPort }}
                        scheme: HTTP
                      initialDelaySeconds: 1
                      timeoutSeconds: 1
                      periodSeconds: 10
                      successThreshold: 1
                      failureThreshold: 3
          env:
                      - name: PORT
                        value: {{ .Values.containers.containerPort | quote }}
# Update with the image you build in part 1
          image: {{ .Values.containers.image }}:{{ .Values.containers.tag }}
          volumeMounts:
            - name: index-html
              mountPath: /tmp/html # this will mount the html.index file to it application location
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      volumes:
        - name: index-html
          configMap:
            name: '{{ .Chart.Name }}-html'
            defaultMode: 420
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10